/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProgressBarImport } from './routes/progress-bar'
import { Route as DonationListImport } from './routes/donation-list'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ProgressBarRoute = ProgressBarImport.update({
  id: '/progress-bar',
  path: '/progress-bar',
  getParentRoute: () => rootRoute,
} as any)

const DonationListRoute = DonationListImport.update({
  id: '/donation-list',
  path: '/donation-list',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/donation-list': {
      id: '/donation-list'
      path: '/donation-list'
      fullPath: '/donation-list'
      preLoaderRoute: typeof DonationListImport
      parentRoute: typeof rootRoute
    }
    '/progress-bar': {
      id: '/progress-bar'
      path: '/progress-bar'
      fullPath: '/progress-bar'
      preLoaderRoute: typeof ProgressBarImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/donation-list': typeof DonationListRoute
  '/progress-bar': typeof ProgressBarRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/donation-list': typeof DonationListRoute
  '/progress-bar': typeof ProgressBarRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/donation-list': typeof DonationListRoute
  '/progress-bar': typeof ProgressBarRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/donation-list' | '/progress-bar'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/donation-list' | '/progress-bar'
  id: '__root__' | '/' | '/donation-list' | '/progress-bar'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DonationListRoute: typeof DonationListRoute
  ProgressBarRoute: typeof ProgressBarRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DonationListRoute: DonationListRoute,
  ProgressBarRoute: ProgressBarRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/donation-list",
        "/progress-bar"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/donation-list": {
      "filePath": "donation-list.tsx"
    },
    "/progress-bar": {
      "filePath": "progress-bar.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
